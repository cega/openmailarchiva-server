<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.2//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">


<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" version="2.4">
<display-name>SecurityFilter Example Application</display-name>

   <filter>
      <filter-name>Security Filter</filter-name>
      <filter-class>org.securityfilter.filter.SecurityFilter</filter-class>
      <init-param>
         <param-name>config</param-name>
         <param-value>/WEB-INF/securityfilter-config.xml</param-value>
         <description>Configuration file location (this is the default value)</description>
      </init-param>
      <init-param>
         <param-name>validate</param-name>
         <param-value>true</param-value>
         <description>Validate config file if set to true</description>
      </init-param>
<!--
      <init-param>
         <param-name>loginSubmitPattern</param-name>
         <param-value>/logMeIn</param-value>
         <description>
            As an example a login form can define "logMeIn" as it action in place of the standard
            "j_security_check" which is a special flag user by app servers for container managed security.
         </description>
      </init-param>
-->
   </filter>

   <!-- map all requests to the SecurityFilter, control what it does with configuration settings -->
   <filter-mapping>
      <filter-name>Security Filter</filter-name>
      <url-pattern>/*</url-pattern>
   </filter-mapping>
   	
	 <filter>
		<filter-name>UTF8Filter</filter-name>
		<filter-class>com.stimulus.util.UTF8Filter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>UTF8Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	 
  <servlet>
    <servlet-name>action</servlet-name>
    <servlet-class>org.apache.struts.action.ActionServlet</servlet-class>
    <init-param>
      <param-name>config</param-name>
      <param-value>/WEB-INF/struts-config.xml</param-value>
    </init-param>
    <init-param>
      <param-name>debug</param-name>
      <param-value>2</param-value>
    </init-param>
    <init-param>
      <param-name>detail</param-name>
      <param-value>2</param-value>
    </init-param>
    <load-on-startup>2</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>action</servlet-name>
    <url-pattern>*.do</url-pattern>
    
  </servlet-mapping>

  <session-config>
    <session-timeout>3000</session-timeout>
  </session-config>

  <taglib>
    <taglib-uri>bean</taglib-uri>
    <taglib-location>/WEB-INF/tld/struts-bean.tld</taglib-location>
  </taglib>
  
  <taglib>
    <taglib-uri>logic</taglib-uri>
    <taglib-location>/WEB-INF/tld/struts-logic.tld</taglib-location>
  </taglib>
  
   <taglib>
    <taglib-uri>html</taglib-uri>
    <taglib-location>/WEB-INF/tld/struts-html.tld</taglib-location>
  </taglib>


 <welcome-file-list>
 	<welcome-file>/account/signonform.jsp</welcome-file>
  </welcome-file-list>

  	<error-page>
        <error-code>500</error-code>
        <location>/common/error.jsp</location>
    </error-page>
    
    <error-page>
        <error-code>500</error-code>
        <location>/account/signonform.jsp</location>
    </error-page>
    
    <error-page>
        <error-code>403</error-code>
        <location>/account/signonform.jsp</location>
    </error-page>
    
    
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>
                Restrict access to JSP pages
      </web-resource-name>
      <url-pattern>*.jsp</url-pattern>
    </web-resource-collection>
    <auth-constraint>
      <description>
               With no roles defined, no access granted
      </description>
    </auth-constraint>
  </security-constraint>
  
  <!-- web service definition -->
  
     <listener>
          <listener-class>org.apache.axis.transport.http.AxisHTTPSessionListener</listener-class>
      </listener>
      
    <servlet>
      <servlet-name>AxisServlet</servlet-name>
      <display-name>Apache-Axis Servlet</display-name>
      <servlet-class>
          org.apache.axis.transport.http.AxisServlet
      </servlet-class>
    </servlet>
  
    <servlet>
      <servlet-name>AdminServlet</servlet-name>
      <display-name>Axis Admin Servlet</display-name>
      <servlet-class>
          org.apache.axis.transport.http.AdminServlet
      </servlet-class>
      <load-on-startup>100</load-on-startup>
    </servlet>
  
    <servlet>
      <servlet-name>SOAPMonitorService</servlet-name>
      <display-name>SOAPMonitorService</display-name>
      <servlet-class>
          org.apache.axis.monitor.SOAPMonitorService
      </servlet-class>
      <init-param>
        <param-name>SOAPMonitorPort</param-name>
        <param-value>5001</param-value>
      </init-param>
      <load-on-startup>100</load-on-startup>
    </servlet>
  
    <servlet-mapping>
      <servlet-name>AxisServlet</servlet-name>
      <url-pattern>/servlet/AxisServlet</url-pattern>
    </servlet-mapping>
  
    <servlet-mapping>
      <servlet-name>AxisServlet</servlet-name>
      <url-pattern>*.jws</url-pattern>
    </servlet-mapping>
  
    <servlet-mapping>
      <servlet-name>AxisServlet</servlet-name>
      <url-pattern>/services/*</url-pattern>
    </servlet-mapping>
  
    <servlet-mapping>
      <servlet-name>SOAPMonitorService</servlet-name>
      <url-pattern>/SOAPMonitor</url-pattern>
    </servlet-mapping>
  
   <!-- uncomment this if you want the admin servlet -->
   <!--
    <servlet-mapping>
      <servlet-name>AdminServlet</servlet-name>
      <url-pattern>/servlet/AdminServlet</url-pattern>
    </servlet-mapping>
   -->
  
      <!-- currently the W3C havent settled on a media type for WSDL;
      http://www.w3.org/TR/2003/WD-wsdl12-20030303/#ietf-draft
      for now we go with the basic 'it's XML' response -->
    <mime-mapping>
      <extension>wsdl</extension>
       <mime-type>text/xml</mime-type>
    </mime-mapping>
    
  
    <mime-mapping>
      <extension>xsd</extension>
      <mime-type>text/xml</mime-type>
  </mime-mapping>


    
</web-app>


